using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.IO;
using System.Text;

namespace Take4.Translator.Tests {
	[TestClass()]
	public class CheckAndGetParameterTests {
		[TestMethod()]
		public void CheckTest1() {
			string lines = @"; generated by Slic3r 1.3.0

; perimeter_speed = 50
; travel_speed = 81
; first_layer_bed_temperature = 60
; first_layer_temperature = 220
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), true);
				Assert.AreEqual(target.PerimeterSpeed, 50);
				Assert.AreEqual(target.TravelSpeed, 81);
				Assert.AreEqual(target.FirstLayerBedTemp, 60);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 220);
			}
		}

		[TestMethod()]
		public void CheckTest2() {
			string lines = @"; generated by Slic3r 1.3.1

; perimeter_speed = 50
; travel_speed = 81
; first_layer_bed_temperature = 60
; first_layer_temperature = 220
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), false);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}

		[TestMethod()]
		public void CheckTest3() {
			string lines = @"
; generated by Slic3r 1.3.0

; perimeter_speed = 50
; travel_speed = 81
; first_layer_bed_temperature = 60
; first_layer_temperature = 220
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), false);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}

		[TestMethod()]
		public void CheckTest4() {
			string lines = @"";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), false);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}

		[TestMethod()]
		public void CheckTest5() {
			string lines = @"; generated by Slic3r 1.3.0

; perimeter_speed = 50
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), true);
				Assert.AreEqual(target.PerimeterSpeed, 50);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}
		[TestMethod()]
		public void CheckTest6() {
			string lines = @"; generated by Slic3r 1.3.0

; travel_speed = 81
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), true);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 81);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}

		[TestMethod()]
		public void CheckTest7() {
			string lines = @"; generated by Slic3r 1.3.0

";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), true);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}

		[TestMethod()]
		public void CheckTest8() {
			string lines = @"; generated by Slic3r 1.3.0

; first_layer_bed_temperature = 60
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), true);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 60);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 0);
			}
		}

		[TestMethod()]
		public void CheckTest9() {
			string lines = @"; generated by Slic3r 1.3.0

; first_layer_temperature = 220
";
			using (var stream = new MemoryStream(Encoding.ASCII.GetBytes(lines))) {
				var target = new CheckAndGetParameter();
				Assert.AreEqual(target.Check(stream), true);
				Assert.AreEqual(target.PerimeterSpeed, 60);
				Assert.AreEqual(target.TravelSpeed, 80);
				Assert.AreEqual(target.FirstLayerBedTemp, 0);
				Assert.AreEqual(target.FirstLayerNozzelTemp, 220);
			}
		}
	}
}